name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NAMESPACE: "com.eminor.donnez_luigloire"

jobs:
  build:
    outputs:
      apk_file_name: ${{steps.build.outputs.apk_file_name}}
      apk_file_path: ${{steps.save_apk.outputs.apk_file_path}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }} 
        fetch-depth: 0 

    - name: Use Git Version
      id: version
      uses: codacy/git-version@2.7.1

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Build with Gradle
      id: build
      env:
          DLG_VERSION_NAME: ${{ steps.version.outputs.version }}

      run: |
        chmod +x gradlew
        echo "The new version is $DLG_VERSION_NAME"
        ./gradlew clean build --warning-mode all \
          -PDLG_VERSION_NAME=$DLG_VERSION_NAME \
          -PDLG_KEY_ALIAS=${{ secrets.DLG_KEY_ALIAS }} \
          -PDLG_KEY_PASSWORD=${{ secrets.DLG_KEY_PASSWORD }} \
          -PDLG_STORE_PASSWORD=${{ secrets.DLG_STORE_PASSWORD }} \
          -PDLG_KEY_PATH=${{ secrets.DLG_KEY_PATH }}
        apk_file_name="$NAMESPACE-$DLG_VERSION_NAME-release.apk"
        echo "apk_file_name=$apk_file_name" >> $GITHUB_OUTPUT

    - name: Save APK
      id: save_apk
      run: 
        apk_file_path="${{ github.workspace }}/${{ steps.build.outputs.apk_file_name }}"
        cp "app/build/outputs/apk/release/${{ steps.build.outputs.apk_file_name }}" "$apk_file_path"
        echo "apk_file_path=$apk_file_path" >> $GITHUB_OUTPUT

    - name: Create Release Tag
      id: create_release_tag
      if: success()
      run: |
        git tag ${{ steps.version.outputs.version }}
        git push --tags

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release
        path: ${{ steps.save_apk.outputs.apk_file_path }}

